{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "comments": "This playbook uses the RiskIQ Intelligence connector to automatically enrich incidents generated by Sentinel with recent passive DNS records.",
        "author": "Brandon Dixon, RiskIQ"
    },
    "parameters": {
        "PlaybookName": {
            "defaultValue": "Recent-Host-Passive-DNS",
            "type": "string"
        },
        "UserName": {
            "defaultValue": "#USERNAME#",
            "type": "string"
        }
    },
    "variables": {
        "AzureSentinelConnectionName": "[concat('azuresentinel-', parameters('PlaybookName'))]",
        "RiskIQConnectionName": "[concat('riskiqintelligence-', parameters('PlaybookName'))]"
    },
    "resources": [{
        "type": "Microsoft.Web/connections",
        "apiVersion": "2016-06-01",
        "name": "[variables('RiskIQConnectionName')]",
        "location": "[resourceGroup().location]",
        "properties": {
            "customParameterValues": {},
            "api": {
                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/riskiqintelligence')]"
            }
        }
    }, {
        "type": "Microsoft.Web/connections",
        "apiVersion": "2016-06-01",
        "name": "[variables('AzureSentinelConnectionName')]",
        "location": "[resourceGroup().location]",
        "properties": {
            "customParameterValues": {},
            "api": {
                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
            }
        }
    }, {
        "type": "Microsoft.Logic/workflows",
        "apiVersion": "2017-07-01",
        "name": "[parameters('PlaybookName')]",
        "location": "[resourceGroup().location]",
        "tags": {
            "LogicAppsCategory": "security"
        },
        "dependsOn": [
            "[resourceId('Microsoft.Web/connections', variables('RiskIQConnectionName'))]",
            "[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]"
        ],
        "properties": {
            "state": "Enabled",
            "definition": {
                "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                "actions": {
                    "Alert_-_Get_hosts": {
                        "inputs": {
                            "body": "@triggerBody()?['Entities']",
                            "host": {
                                "connection": {
                                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                }
                            },
                            "method": "post",
                            "path": "/entities/host"
                        },
                        "runAfter": {},
                        "type": "ApiConnection"
                    },
                    "Condition_2": {
                        "actions": {
                            "Set_variable": {
                                "inputs": {
                                    "name": "comment",
                                    "value": "@{concat(substring(body('Create_CSV_table'), 0, 750), '...')}"
                                },
                                "runAfter": {},
                                "type": "SetVariable"
                            }
                        },
                        "expression": {
                            "and": [
                                {
                                    "greater": [
                                        "@length(body('Create_CSV_table'))",
                                        750
                                    ]
                                }
                            ]
                        },
                        "runAfter": {
                            "Initialize_variable_4": [
                                "Succeeded"
                            ]
                        },
                        "type": "If"
                    },
                    "Create_CSV_table": {
                        "inputs": {
                            "format": "CSV",
                            "from": "@variables('infra')"
                        },
                        "runAfter": {
                            "For_each": [
                                "Succeeded"
                            ]
                        },
                        "type": "Table"
                    },
                    "For_each": {
                        "actions": {
                            "For_each_5": {
                                "actions": {
                                    "For_each_3": {
                                        "actions": {
                                            "Condition": {
                                                "actions": {
                                                    "Append_to_array_variable": {
                                                        "inputs": {
                                                            "name": "infra",
                                                            "value": {
                                                                " ": "@items('For_each_3')"
                                                            }
                                                        },
                                                        "runAfter": {},
                                                        "type": "AppendToArrayVariable"
                                                    },
                                                    "Append_to_array_variable_2": {
                                                        "inputs": {
                                                            "name": "duplicates",
                                                            "value": "@items('For_each_3')"
                                                        },
                                                        "runAfter": {
                                                            "Append_to_array_variable": [
                                                                "Succeeded"
                                                            ]
                                                        },
                                                        "type": "AppendToArrayVariable"
                                                    }
                                                },
                                                "expression": {
                                                    "and": [
                                                        {
                                                            "not": {
                                                                "contains": [
                                                                    "@variables('duplicates')",
                                                                    "@items('For_each_3')"
                                                                ]
                                                            }
                                                        }
                                                    ]
                                                },
                                                "runAfter": {},
                                                "type": "If"
                                            }
                                        },
                                        "foreach": "@items('For_each_5')?['data']",
                                        "runAfter": {},
                                        "type": "Foreach"
                                    }
                                },
                                "foreach": "@body('Passive_DNS_results_by_name')?['records']",
                                "runAfter": {
                                    "Passive_DNS_results_by_name": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "Foreach"
                            },
                            "Passive_DNS_results_by_name": {
                                "inputs": {
                                    "host": {
                                        "connection": {
                                            "name": "@parameters('$connections')['riskiqintelligence']['connectionId']"
                                        }
                                    },
                                    "method": "get",
                                    "path": "/v0/pdns/name",
                                    "queries": {
                                        "lastSeenAfter": "@variables('last30')",
                                        "name": "@items('For_each')?['DnsDomain']",
                                        "type": "A"
                                    }
                                },
                                "runAfter": {},
                                "type": "ApiConnection"
                            }
                        },
                        "foreach": "@body('Alert_-_Get_hosts')?['Hosts']",
                        "runAfter": {
                            "Initialize_variable_3": [
                                "Succeeded"
                            ]
                        },
                        "type": "Foreach"
                    },
                    "For_each_2": {
                        "actions": {
                            "Add_comment_to_incident_(V2)": {
                                "inputs": {
                                    "body": {
                                        "Value": "Last 30-days of unique passive DNS records for @{items('For_each_2')?['DnsDomain']}\n@{variables('comment')}\nExplore more at https://community.riskiq.com/search/@{items('For_each_2')?['DnsDomain']}"
                                    },
                                    "host": {
                                        "connection": {
                                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                        }
                                    },
                                    "method": "put",
                                    "path": "/Comment/@{encodeURIComponent(triggerBody()?['WorkspaceSubscriptionId'])}/@{encodeURIComponent(triggerBody()?['WorkspaceId'])}/@{encodeURIComponent(triggerBody()?['WorkspaceResourceGroup'])}/@{encodeURIComponent('Alert')}/@{encodeURIComponent(triggerBody()?['SystemAlertId'])}"
                                },
                                "runAfter": {},
                                "type": "ApiConnection"
                            }
                        },
                        "foreach": "@body('Alert_-_Get_hosts')?['Hosts']",
                        "runAfter": {
                            "Condition_2": [
                                "Succeeded"
                            ]
                        },
                        "type": "Foreach"
                    },
                    "Initialize_variable": {
                        "inputs": {
                            "variables": [
                                {
                                    "name": "last30",
                                    "type": "string",
                                    "value": "@{formatDateTime(addDays(utcNow(), -30), 'yyyy-MM-dd')}"
                                }
                            ]
                        },
                        "runAfter": {
                            "Initialize_variable_2": [
                                "Succeeded"
                            ]
                        },
                        "type": "InitializeVariable"
                    },
                    "Initialize_variable_2": {
                        "inputs": {
                            "variables": [
                                {
                                    "name": "infra",
                                    "type": "array"
                                }
                            ]
                        },
                        "runAfter": {
                            "Alert_-_Get_hosts": [
                                "Succeeded"
                            ]
                        },
                        "type": "InitializeVariable"
                    },
                    "Initialize_variable_3": {
                        "inputs": {
                            "variables": [
                                {
                                    "name": "duplicates",
                                    "type": "array"
                                }
                            ]
                        },
                        "runAfter": {
                            "Initialize_variable": [
                                "Succeeded"
                            ]
                        },
                        "type": "InitializeVariable"
                    },
                    "Initialize_variable_4": {
                        "inputs": {
                            "variables": [
                                {
                                    "name": "comment",
                                    "type": "string",
                                    "value": "@body('Create_CSV_table')"
                                }
                            ]
                        },
                        "runAfter": {
                            "Create_CSV_table": [
                                "Succeeded"
                            ]
                        },
                        "type": "InitializeVariable"
                    }
                },
                "contentVersion": "1.0.0.0",
                "outputs": {},
                "parameters": {
                    "$connections": {
                        "defaultValue": {},
                        "type": "Object"
                    }
                },
                "triggers": {
                    "When_a_response_to_an_Azure_Sentinel_alert_is_triggered": {
                        "inputs": {
                            "body": {
                                "callback_url": "@{listCallbackUrl()}"
                            },
                            "host": {
                                "connection": {
                                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                }
                            },
                            "path": "/subscribe"
                        },
                        "type": "ApiConnectionWebhook"
                    }
                }
            },
            "parameters": {
                "$connections": {
                    "value": {
                        "azuresentinel": {
                            "connectionId": "[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                            "connectionName": "[variables('AzureSentinelConnectionName')]",
                            "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                        },
                        "riskiqintelligence": {
                            "connectionId": "[resourceId('Microsoft.Web/connections', variables('RiskIQConnectionName'))]",
                            "connectionName": "[variables('RiskIQConnectionName')]",
                            "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/riskiqintelligence')]"
                        }
                    }
                }
            }
        }
    }]
}